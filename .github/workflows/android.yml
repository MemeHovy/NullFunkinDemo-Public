name: Android Build CI

on:
  schedule:
    - cron: "0 0 * * *"
  # I not want build every push and pull requests. (for now) - mcagabe19
  # push:
    # branches: [ main ]
  # pull_request:
    # branches: [ main ]
  workflow_dispatch:

jobs:
  Android:
    permissions: write-all
    name: Android
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        build: [release]
        version: [20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r11c
      - name: Setup Java JDK 11
        uses: actions/setup-java@main
        with:
          distribution: zulu
          java-version: 11
      - name: Setup Android SDK
        uses: android-actions/setup-android@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.0
      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/.gradle
            ~/haxelib
            ./export
          key: cache-android-build
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install lime 7.9.0
          haxelib install openfl 9.1.0
          haxelib install hxcpp 4.2.1
          haxelib --never install flixel 4.11.0
          haxelib install flixel-ui 2.5.0
          haxelib install flixel-addons 2.11.0
          haxelib install hscript 2.5.0
          haxelib install hxCodec 2.5.1
          haxelib install hxjsonast
          haxelib git hxlua https://github.com/mcagabe19/hxlua.git
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git
          haxelib git extension-kizzyrpc https://github.com/MAJigsaw77/extension-kizzyrpc.git
          haxelib set hxcpp 4.2.1
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Build
        continue-on-error: true
        run: haxelib run lime build android -armv7 -D mobileC -D LUA_USE_C89 -D vlcvideo -D NO_PRECOMPILED_HEADERS -${{ matrix.build }}
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni
      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }
      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/.gradle
            ~/haxelib
            ./export
          key: cache-android-build
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: buildAndroid-${{ matrix.build }}
          path: 'export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk'
          if-no-files-found: error
